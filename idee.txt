minimal doorlockd + web api:

/*
 * Layout
 */

- db :
  tabel tags:
   ((int)id, (string)hwid, (string)description, (bool)is_enabled, *_dates)
   
  table unkowntags:
    ((int)id, (string)hwid, *_dates)


   table users:
	 (id, email, password,(bool)is_enabled, *_dates)


	db *history:
	  (changes by users)
	
- container: (singleton)
  * config
  * hw
  * db
  * log
  
- HW:
  out12v Solenoid, 
  out12v BuzzerOut, 
  
  button IntercomButton
  button BuzzerButton
  
  rfid	rc522
  
  'output leds' : UILed class --> Led hw class.
  
  
- API:
	#
	# API JWT
	#
		/api/login/				[POST] json: {'email': 'xxx', 'password': 'xxx'} 
		/api/refresh_token/		[POST] (no payload) 

	#
	# API DB:
	#
		/api/tags/				[*]
		/api/unknowntags/		[*]
		/api/users/				[*]
		/api/changelog/*/ 		[*]

	# #
	# # API HW
	# #
	# 	/api/hw/solenoid			{ status = false|true }
	# 	/api/hw/buzzer 				{ status = false|true }
	# 	/api/hw/button1				{ status = false|true } (read-only ?)
	# 	/api/hw/button2				{ status = false|true } (read-only ?)
	# 	/api/hw/rfidreader			{ status = false|true } (on/off)
	# 	/api/hw/automated_actions 	{ status=false|true; trigger_actions=['delay1s','solenoid']}
	# 								# (actions: buzzer|solenoid|delay1s|...)
	### hw api discontinued 
	
	#
	# API Event hooks:
	#
	'''simplified and less exposed event hook api'''
	
	/api/hooks/--user-defined-name--	[POST] { will emit user defined event }
	
	# #
	# # idea API State hooks
	# #
	# /api/hooks/--user-defined-name--	[GET] { will show current state }
	
	
/*
 * Rfid tag types
 */

type A 4byte ID / 8byte ID
type B 


type A 4byte ^08: is altijd random id
type A 7bytes altijd uniek  (... ? warschnlijk)
type B ... 


/*
 * stappen plan
 */
[x]: GPIO PN532 

[x]: GPIO Wrapper implementeren
[x]: config parser, + simple test : test output module (led), test input module (sleep aan /sleep uit)
[x]: GPIO Wrapper add limit_direction.
[x]: UILed4 module (check Solenoid module type. or abort)
[x]: RFID ready change event -> state (ui4led might start later)
[x]: AdaFruit -> event spawn in thread.
[x]: ModuleManager: paralel starting modules
[x]: os+ => upgrade debian for newer python for libgpiod.
[x]: GPIO Wrapper , interface change (str)pin --> (obj)port. 
[x]: libgpiod -> https://www.acmesystems.it/libgpiod (BBB: https://elinux.org/Beagleboard:Cape_Expansion_Headers )
[x]:"gpiod": detect event = loop/wait .. howto kill thread?. | (thread deamon modus) | kan ik port release doen (lost niet op?).
	# - sig_solution_event.py :
	# 	signal.signal(signal.SIGUSR1, lambda signum, frame: None)
	# 	signal.pthread_kill(t.ident, signal.SIGUSR1)
		
	- of : event_detect() -> EventObject 
		def stop(self):
		 - self.wait = False
		 - request_line.release() 
		// [ THIS IS THE SOLUTION ]
	
[x]	"gpiod": init output value high? (solenoid) --> use default_val = 0


[ ]: TODO: bbb$> ln -s config_v2-bbb.ini config_v2.ini 
[x]: TODO rockpi-s -> JWT ?? | fixed old/new version = Bytes/str 
[x]: pn532 timeout ==> error ?? , break .. dummy , whatever 
[ ]: cleanup and push to github
[ ]: central db.
[ ]: lezen en schrijven van Tag /target chip

[ ]: Flask -> module (??) Web.py | or not and run app in flask wsgi 
[ ]: hw RS485 (balanced serial communicatie) (@matthijs)
[ ]: central db backend.
[ ]: update pyJWT (to 2.3.0)


####### RockPi-S
info: https://wiki.radxa.com/RockpiS/hardware/gpio


### beta release 0.2:
[x] cleanup hardware page
[x] cleanup debug page ()

[x] Tag/User is_disabled --> is_enabled
[x] Tags Order by Description
[x] angular-web op github zetten
[x] doorlockd branches (master -> 'version @Old deWAR', ' minimal-2020-03' -> master)
[x] doorlock-cli maken. (cleo)
[ ] ??? last seen field (maybe yes / maybe not?).
[x] tag create error RFiD hwid ^08 4bytes (only type A)  . random hwid. http 500 -> iets bruikbaars. 4bytes?!
[x] tag create 00:00:00:00 failure
[?] hwid checksum byte... cleanup/check , admin-cli tested ok| rc522 code NOT TESTED
[ ] json api errors spec. : change error.error -> error.type : ('token error','validation','...',  ) ==> put in doc.
[x] RFID reader: nfc.clf -> pn532
[ ] PN532 gpio test and discover.
[ ] nfcpy/PN532 card read/write.
[x] RFid NFC start stop by status not working.
-------------------- 
[x] orator, migratie, models
[x] flask api 
[x] api auth / + json web tokens ??
[x] api token uid -> changelogs.user_id 
[x] change: user.password -> user.password_hash [GET/PUT], user.password [PUT] (getter:Null?||WriteOnly) [only: plain writeonly]
[x] fix: password_hash (read/write) instead of WriteOnly/ReadOnly; password WrieOnly 
[x] validatie: jsonschema : regexp ???
[x] refresh token with token.
[x] move Token settings into config file [secret,expire], added logger
[ ] "Restinator" remake (FlaskRequestClass/)
[ ] [web interface?]
[x] HW, out12v
[x] HW, Solenoid thread wait
[X] HW, BuzzerOut thread wait
[x] HW, button, ..
[x] HW, Mifare RFID reader....
[x] HW, irq and rst pin config.
[x] workaround to stop/restart RFID reader (maybe reset GPIO pins?)
[x] HW, Led
[x] HW, UI Leds setup (2/bicoler led)
[x] HW, UI Leds setup (4 leds)
[ ] HW, UI Leds setup (1 single led)
[ ] overwrite_config ( config_defaults={},  config_overwrite={}, config_fromfile={}, ===> config={} )
		config_defaults: enable_hardware = true
		config_overwrite: enable_hardware = false
		config_fromfile: pin / etc... config.


[ ] idee: split Harwdware en Actions

[x] UI - user interface (led)
[x] rest_api_singleobject.py: rest_api class (handling HW and other objects.)
[x] data_container Singleton
[x] config,
[_] logging,()
[ ] waitress access_log
[x] threading.
[x] Mifare 
[-] python requirements.txt / venv 
[ ] SSL (https://...) [ Flask ssl_context='adhoc'/ OpenSSL?/stunel?/ ]
[x] Ctrl-C + object.hw_exit()
[ ] ...

 
[x] install on beaglbone , pyjwt/jwt issues ?? (https://github.com/jpadilla/pyjwt/issues/374) : install pyjwt
[ ] python requirements.txt? or pipenv (https://medium.com/@boscacci/why-and-how-to-make-a-requirements-txt-f329c685181e)

#
# client|server features
#
[ ] API make /api/tags/<int:id> && /api/tags/<str:hwid> (magic_route? , db_find_one? )
