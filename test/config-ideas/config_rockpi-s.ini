[doorlockd]
log_level = "DEBUG"
stderr_level = "INFO"
logfile_level = "DEBUG"
logfile_name = "./run-log.log"

# /* default modules (hardware) and webserver are enabled */
# enable_modules = true
# enable_webserver = true
enable_webserver = false




### beagleboneblack
# [module.gpiod]
# type = "GPIOD"
# # https://github.com/wie-niet/doorlockd-PCB-BBB#connected-io-ports
# io_export.button1 	= { port = "gpiochip0 27", limit_direction = "INPUT" }
# io_export.button2 	= { port = "gpiochip2 1", limit_direction = "INPUT" }
# io_export.solenoid 	= { port = "gpiochip1 28", limit_direction = "OUTPUT" }
# io_export.buzzer 	= { port = "gpiochip2 5", limit_direction = "OUTPUT" }
# io_export.led1 	= { port = "gpiochip1 18", limit_direction = "OUTPUT" }
# io_export.led2 	= { port = "gpiochip1 19", limit_direction = "OUTPUT" }
# io_export.led3 	= { port = "gpiochip0 23", limit_direction = "OUTPUT" }
# io_export.led4 	= { port = "gpiochip0 22", limit_direction = "OUTPUT" }
### /beagleboneblack

### rockppi
# Pin#	Func1	Func2	Func3	Func4	 GPIO number
# 16	GPIO2_B2	I2S0_8CH_SDO1			74
# 18	GPIO2_B1	I2S0_8CH_SDO0			73
# Out  GPIO2_B2 = 32*2 + 8*1 + 2 = 74 || GPIO2 , B2 (8+2=10) = gpiochip2 10
# in   GPIO2_B2 = 32*2 + 8*1 + 1 = 73 || GPIO2 , B1 (8+2=9)  = gpiochip2 9

[module.gpiod]
type = "GPIOD"
io_export.button1 = { port = "gpiochip2 9", limit_direction = "INPUT" }   # pin 18
io_export.buzzer 	= { port = "gpiochip2 10", limit_direction = "OUTPUT" } # pin 16
### /rockpi

# losse draadjes PN532: 
# GND -> groen  -> 6 ,... 
# RX  -> blauw  -> 10
# VCC -> oranje -> 2 | 4
# TX  -> geel   -> 8

[module.pn532]
type = "PN532"
path = "ttyS0:pn532" 
io_export.pn532led1 = { port = "p30", limit_direction = "OUTPUT" }
io_export.pn532led2 = { port = "p31", limit_direction = "OUTPUT" }
io_export.pn532led3 = { port = "p32", limit_direction = "OUTPUT" }
io_export.pn532led4 = { port = "p33", limit_direction = "OUTPUT" }
io_export.pn532out 	= { port = "p71", limit_direction = "OUTPUT", active_low = false }
io_export.pn532in	= { port = "p72", limit_direction = "INPUT", active_low = false }

rfid_enabled = true
rfid_event = "open_solenoid"


[module.ui_pn532]
type = "UILed4"
led1 = "pn532led1"
led2 = "pn532led2"
led3 = "pn532led3"
led4 = "pn532led4"
solenoid = "s1"
rfid = "pn532"
blink_on_buttons = ["b0"] # only b0 is on pn532
# blink_on_buttons = ["b0", "b1", "b2"]


[module.s1]
type = "Solenoid"
time_wait = "2.33"
io_output = "pn532out"


[module.b0]
type = "Button"
io_input = "pn532in"
event = "buzz_buzzer"
# event = "open_solenoid"





[module.b1]
type = "Button"
io_input = "button1"
event = "open_solenoid"

[module.bz]
type = "Buzzer"
io_output = "buzzer"
event = "buzz_buzzer"


#
# [module.b2]
# type = "Button"
# io_input = "button2"
# event = "buzz_buzzer"
#
#
# # [module.s2]
# # type = "Solenoid"
# # event = "open_solenoid"
# # io_output = "led2"
# #
#
# [module.api]
# type = "ApiEventHook"
# event = "open_solenoid"
# path = "deur"

[module.rfid_auth]
type = "DjangoBackendRfidAuth"
lockname="rockpis"
api_url= "https://192.168.2.1"
offline_file="../tmp/offline.db"
client_ssl_cert="../tmp/client.pem"
background_sync_method = "LOOP"
server_ssl_fingerprint='84:98:1F:5E:9B:27:31:75:8F:18:47:7F:B6:A5:F5:19:E9:81:18:18:DC:DC:64:61:13:57:D6:12:3C:2A:A7:86'
log_unknownkeys = true
log_stats_precision = 20000
log_sync_interval = 1000
# #default values:
# server_ssl_fingerprint=None
# client_ssl_cert=None # 
# offline_file=None
# log_unknownkeys=True
# log_stats_precision=3600*24*7
# log_sync_interval=None
